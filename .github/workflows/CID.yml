name: .NET 7 Continuous Integration and Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: ['win-x64', 'linux-x64', 'osx-x64']
    name: .NET 7 Build Application
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install .net Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "7.0.x"

      - name: Retrieve NUGET cache
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Run tests
        run: dotnet test --logger trx

      - name: Build application
        run: dotnet publish Extractor/Extractor.csproj -c Release -o ./publish --runtime ${{ matrix.rid }} /p:IncludeNativeLibrariesForSelfExtract=false /p:UseAppHost=true /p:PublishTrimmed=false --no-self-contained

      - name: Change directory and Zip Artifacts
        run: |
           cd publish
           zip -r ../${{ matrix.rid }}.zip .
           cd ..

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rid }}.zip
          path: ${{ matrix.rid }}.zip

  upload_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            win-x64.zip
            linux-x64.zip
            osx-x64.zip
